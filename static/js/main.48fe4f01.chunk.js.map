{"version":3,"sources":["Chart.js","App.js","index.js"],"names":["Chart","_ref","cubejsApi","title","query","render","react_default","a","createElement","Card","CardBody","CardTitle","tag","CardText","cubejs_react","_ref2","resultSet","className","cubejs","apiUrl","numberFormatter","item","numeral","format","dateFormatter","moment","renderSingleValue","key","height","chartPivot","App","Container","fluid","Row","Col","sm","src_Chart","measures","filters","dimension","operator","values","timeDimensions","dateRange","granularity","es6","width","data","dataKey","tickFormatter","labelFormatter","type","name","stroke","fill","dimensions","stackId","Component","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.48fe4f01.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, CardTitle, CardBody, CardText } from \"reactstrap\";\r\nimport { QueryRenderer } from \"@cubejs-client/react\";\r\n\r\nconst Chart = ({ cubejsApi, title, query, render }) => (\r\n  <Card>\r\n    <CardBody>\r\n      <CardTitle tag=\"h5\">{title}</CardTitle>\r\n      <CardText>\r\n        <QueryRenderer\r\n          query={query}\r\n          cubejsApi={cubejsApi}\r\n          render={({ resultSet }) => {\r\n            if (!resultSet) {\r\n              return <div className=\"loader\" />;\r\n            }\r\n\r\n            return render(resultSet);\r\n          }}\r\n        />\r\n      </CardText>\r\n    </CardBody>\r\n  </Card>\r\n);\r\n\r\nexport default Chart;\r\n","import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  Legend,\n  BarChart,\n  Bar\n} from \"recharts\";\nimport moment from \"moment\";\nimport numeral from \"numeral\";\nimport cubejs from \"@cubejs-client/core\";\nimport Chart from \"./Chart.js\";\n\nconst cubejsApi = cubejs(\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.e30.K9PiJkjegbhnw4Ca5pPlkTmZihoOm42w8bja9Qs2qJg\",{\n  apiUrl: \"https://react-query-builder.herokuapp.com/cubejs-api/v1\"\n})\nconst numberFormatter = item => numeral(item).format(\"0,0\");\nconst dateFormatter = item => moment(item).format(\"MMM YY\");\n\nconst renderSingleValue = (resultSet, key) => (\n  <h1 height={300}>{numberFormatter(resultSet.chartPivot()[0][key])}</h1>\n);\n\nclass App extends Component {\n  render() {\n    return (\n    <div>\n      <Container fluid>\n        <Row>\n          <Col sm=\"4\">\n            <Chart\n              cubejsApi={cubejsApi}\n              title=\"Total Users\"\n              query={{ measures: [\"Users.count\"] }}\n              render={resultSet => renderSingleValue(resultSet, \"Users.count\")}\n            />\n          </Col>\n          <Col sm=\"4\">\n            <Chart\n              cubejsApi={cubejsApi}\n              title=\"Total Orders\"\n              query={{ measures: [\"Orders.count\"] }}\n              render={resultSet => renderSingleValue(resultSet, \"Orders.count\")}\n            />\n          </Col>\n          <Col sm=\"4\">\n            <Chart\n              cubejsApi={cubejsApi}\n              title=\"Shipped Orders\"\n              query={{\n                measures: [\"Orders.count\"],\n                filters: [\n                  {\n                    dimension: \"Orders.status\",\n                    operator: \"equals\",\n                    values: [\"shipped\"]\n                  }\n                ]\n              }}\n              render={resultSet => renderSingleValue(resultSet, \"Orders.count\")}\n            />\n          </Col>\n        </Row>\n        <br />\n        <br />\n        <Row>\n          <Col sm=\"6\">\n            <Chart\n              cubejsApi={cubejsApi}\n              title=\"New Users Over Time\"\n              query={{\n                measures: [\"Users.count\"],\n                timeDimensions: [\n                  {\n                    dimension: \"Users.createdAt\",\n                    dateRange: [\"2017-01-01\", \"2018-12-31\"],\n                    granularity: \"month\"\n                  }\n                ]\n              }}\n              render={resultSet => (\n                <ResponsiveContainer width=\"100%\" height={300}>\n                  <AreaChart data={resultSet.chartPivot()}>\n                    <XAxis dataKey=\"category\" tickFormatter={dateFormatter} />\n                    <YAxis tickFormatter={numberFormatter} />\n                    <Tooltip labelFormatter={dateFormatter} />\n                    <Area\n                      type=\"monotone\"\n                      dataKey=\"Users.count\"\n                      name=\"Users\"\n                      stroke=\"rgb(106, 110, 229)\"\n                      fill=\"rgba(106, 110, 229, .16)\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              )}\n            />\n          </Col>\n          <Col sm=\"6\">\n            <Chart\n              cubejsApi={cubejsApi}\n              title=\"Orders by Status Over time\"\n              query={{\n                measures: [\"Orders.count\"],\n                dimensions: [\"Orders.status\"],\n                timeDimensions: [\n                  {\n                    dimension: \"Orders.createdAt\",\n                    dateRange: [\"2017-01-01\", \"2018-12-31\"],\n                    granularity: \"month\"\n                  }\n                ]\n              }}\n              render={resultSet => {\n                return (\n                  <ResponsiveContainer width=\"100%\" height={300}>\n                    <BarChart data={resultSet.chartPivot()}>\n                      <XAxis tickFormatter={dateFormatter} dataKey=\"x\" />\n                      <YAxis tickFormatter={numberFormatter} />\n                      <Bar\n                        stackId=\"a\"\n                        dataKey=\"shipped, Orders.count\"\n                        name=\"Shipped\"\n                        fill=\"#7DB3FF\"\n                      />\n                      <Bar\n                        stackId=\"a\"\n                        dataKey=\"processing, Orders.count\"\n                        name=\"Processing\"\n                        fill=\"#49457B\"\n                      />\n                      <Bar\n                        stackId=\"a\"\n                        dataKey=\"completed, Orders.count\"\n                        name=\"Completed\"\n                        fill=\"#FF7C78\"\n                      />\n                      <Legend />\n                      <Tooltip />\n                    </BarChart>\n                  </ResponsiveContainer>\n                );\n              }}\n            />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App.js\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}